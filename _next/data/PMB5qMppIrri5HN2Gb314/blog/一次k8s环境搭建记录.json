{"pageProps":{"post":{"mdxSource":"<h1>环境安装</h1>\n<h2>前言</h2>\n<p>使用虚拟机搭建集群了</p>\n<p>因为macos、windows下的docker桥接网络问题</p>\n<h2>虚拟机集群搭建</h2>\n<p>virtualbox下载（太难用了）</p>\n<p>使用vmwarefusion</p>\n<p>centos stream 8 下载</p>\n<p>导入 创建一个master 两个worker</p>\n<blockquote>\n<p>20GB磁盘 2GB内存 2CPU核心\n192.168.68.101\n192.168.68.111 192.168.68.112</p>\n</blockquote>\n<pre><code>设置镜像\n\n设置桥接模式\n\n打开网络连接\n\naliyun的\n<span class=\"hljs-attr\">http</span>:<span class=\"hljs-comment\">//mirrors.aliyun.com/centos/8-stream/BaseOS/x86_64/os/</span>\n\n镜像url\n\n等待镜像meta完成\n\n使用最小安装(免得浪费空间)\n\n创建一个然后复制另外两个\n\n复制完修改主机名\n\n修改ip地址\n</code></pre><h2>centos8网络配置</h2>\n<blockquote>\n<p>nmtui(GUI模式) nmcli(命令行模式)</p>\n</blockquote>\n<p>nmcli会自动把配置写到/etc/sysconfig/network-scripts/目录下面(ifcfg-ens33)（nmcli和nmtui的网络配置会覆盖配置文件的内容），配置文件的生成与使用状态均由NetworkManager控制。</p>\n<pre><code>nmcli connection show  <span class=\"hljs-comment\"># 查看当前网络连接</span>\n\nnmcli con mod ens33 ipv4.addresses <span class=\"hljs-number\">192.168</span><span class=\"hljs-number\">.93</span><span class=\"hljs-number\">.70</span>/<span class=\"hljs-number\">24</span>  <span class=\"hljs-comment\"># 直接修改当前网卡静态IP地址</span>\n\n<span class=\"hljs-comment\"># 重启网路</span>\n<span class=\"hljs-comment\">#方法1</span>\nnmcli device reapply ens33 \n\n<span class=\"hljs-comment\">#方法2</span>\nnmcli con reload &amp;&amp; nmcli con up ens33\n\n<span class=\"hljs-comment\">#方法3</span>\nnmcli networking off &amp;&amp; nmcli networking on\n\nip a  <span class=\"hljs-comment\"># 检查网络是否生效 也可以去上文说的配置文件中查看</span>\n</code></pre><h2>修改时区</h2>\n<pre><code class=\"hljs language-powershell\">timedatectl  <span class=\"hljs-comment\"># 查看时间</span>\n\ntimedatectl <span class=\"hljs-built_in\">list</span>-timezones  <span class=\"hljs-comment\"># 列出可用时区</span>\n\ntimedatectl <span class=\"hljs-built_in\">set</span>-timezone Asia/Shanghai\n</code></pre><h2>系统命令</h2>\n<pre><code class=\"hljs language-powershell\">shutdown -P now <span class=\"hljs-comment\"># 立即关机</span>\n</code></pre><h2>k8s集群安装</h2>\n<p>使用 root 身份在所有节点执行如下代码，以安装软件：</p>\n<p>containerd\nnfs-utils\nkubectl / kubeadm / kubelet</p>\n<p>镜像</p>\n<ul>\n<li>腾讯云 docker hub 镜像\nexport REGISTRY_MIRROR=&quot;<a href=\"https://mirror.ccs.tencentyun.com\">https://mirror.ccs.tencentyun.com</a>&quot;</li>\n<li>DaoCloud 镜像\nexport REGISTRY_MIRROR=&quot;<a href=\"http://f1361db2.m.daocloud.io\">http://f1361db2.m.daocloud.io</a>&quot;</li>\n<li>华为云镜像\nexport REGISTRY_MIRROR=&quot;<a href=\"https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com\">https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com</a>&quot;</li>\n<li>阿里云 docker hub 镜像\nexport REGISTRY_MIRROR=<a href=\"https://registry.cn-hangzhou.aliyuncs.com\">https://registry.cn-hangzhou.aliyuncs.com</a></li>\n</ul>\n<pre><code class=\"hljs language-powershell\"><span class=\"hljs-comment\"># 在 master 节点和 worker 节点都要执行</span>\n<span class=\"hljs-comment\"># 最后一个参数 1.21.4 用于指定 kubenetes 版本，支持所有 1.21.x 版本的安装</span>\n\nexport REGISTRY_MIRROR=https://registry.cn-hangzhou.aliyuncs.com\n\ncurl -sSL https://kuboard.cn/install-script/v1<span class=\"hljs-number\">.21</span>.x/install_kubelet.sh | sh -s <span class=\"hljs-number\">1.21</span><span class=\"hljs-number\">.4</span>\n\n<span class=\"hljs-comment\"># 或者使用该目录下kubelet_install.sh脚本</span>\n</code></pre><h2>init_master</h2>\n<pre><code class=\"hljs language-powershell\"><span class=\"hljs-comment\"># 只在 master 节点执行</span>\n<span class=\"hljs-comment\"># 替换 x.x.x.x 为 master 节点的内网IP</span>\n<span class=\"hljs-comment\"># export 命令只在当前 shell 会话中有效，开启新的 shell 窗口后，如果要继续安装过程，请重新执行此处的 export 命令</span>\n\nexport MASTER_IP=x.x.x.x\n\n<span class=\"hljs-comment\"># 替换 apiserver.demo 为 您想要的 dnsName</span>\n\nexport APISERVER_NAME=apiserver.demo\n\n<span class=\"hljs-comment\"># Kubernetes 容器组所在的网段，该网段安装完成后，由 kubernetes 创建，事先并不存在于您的物理网络中</span>\n\nexport POD_SUBNET=<span class=\"hljs-number\">10.100</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span>/<span class=\"hljs-number\">16</span>\n\necho <span class=\"hljs-string\">&quot;${MASTER_IP}    ${APISERVER_NAME}&quot;</span> &gt;&gt; /etc/hosts\n\n\ncurl -sSL https://kuboard.cn/install-script/v1<span class=\"hljs-number\">.21</span>.x/init_master.sh | sh -s <span class=\"hljs-number\">1.21</span><span class=\"hljs-number\">.4</span> [/coredns]\n<span class=\"hljs-comment\"># 使用同目录下的init_master.sh执行脚本</span>\n</code></pre><p>检查master初始化结果</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"hljs-comment\"># 只在 master 节点执行</span>\n\n<span class=\"hljs-comment\"># 执行如下命令，等待 3-10 分钟，直到所有的容器组处于 Running 状态</span>\nwatch kubectl get pod -n kube-system -o wide\n\n<span class=\"hljs-comment\"># 查看 master 节点初始化结果</span>\nkubectl get nodes -o wide\n</code></pre><h2>安装网络插件</h2>\n<p>网络插件可以选择 calico 或者 flannel（任意选择其一即可）。</p>\n<pre><code class=\"hljs language-powershell\">\n# Calico\n\n<span class=\"hljs-keyword\">export</span> POD_SUBNET=<span class=\"hljs-number\">10.100</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span>/<span class=\"hljs-number\">16</span>\nkubectl apply -f https:<span class=\"hljs-comment\">//kuboard.cn/install-script/v1.21.x/calico-operator.yaml</span>\nwget https:<span class=\"hljs-comment\">//kuboard.cn/install-script/v1.21.x/calico-custom-resources.yaml</span>\nsed -i <span class=\"hljs-string\">&quot;s#192.168.0.0/16#${POD_SUBNET}#&quot;</span> calico-custom-resources.yaml\nkubectl apply -f calico-custom-resources.yaml\n\n# !! Flannel\n\n<span class=\"hljs-keyword\">export</span> POD_SUBNET=<span class=\"hljs-number\">10.100</span><span class=\"hljs-number\">.0</span><span class=\"hljs-number\">.0</span>/<span class=\"hljs-number\">16</span>\nkubectl apply -f https:<span class=\"hljs-comment\">//kuboard.cn/install-script/v1.21.x/calico-operator.yaml</span>\nwget https:<span class=\"hljs-comment\">//kuboard.cn/install-script/flannel/flannel-v0.14.0.yaml</span>\nsed -i <span class=\"hljs-string\">&quot;s#10.244.0.0/16#${POD_SUBNET}#&quot;</span> flannel-v0<span class=\"hljs-number\">.14</span><span class=\"hljs-number\">.0</span>.yaml\nkubectl apply -f ./flannel-v0<span class=\"hljs-number\">.14</span><span class=\"hljs-number\">.0</span>.yaml\n</code></pre><h1>初始化worker节点</h1>\n<p>在master节点获取token</p>\n<pre><code class=\"hljs language-powershell\">kubeadm token create --<span class=\"hljs-built_in\">print</span>-join-command\n\nkubeadm join apiserver.demo:<span class=\"hljs-number\">6443</span> --token mpfjma<span class=\"hljs-number\">.4</span>vjjg8flqihor4vt     --discovery-token-ca-cert-<span class=\"hljs-built_in\">hash</span> sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n \n<span class=\"hljs-comment\"># 该 token 的有效时间为 2 个小时，2小时内，您可以使用此 token 初始化任意数量的 worker 节点。</span>\n</code></pre><p>在worker下执行</p>\n<pre><code class=\"hljs language-powershell\"><span class=\"hljs-comment\"># 只在 worker 节点执行</span>\n<span class=\"hljs-comment\"># 替换 x.x.x.x 为 master 节点的内网 IP</span>\nexport MASTER_IP=x.x.x.x\n<span class=\"hljs-comment\"># 替换 apiserver.demo 为初始化 master 节点时所使用的 APISERVER_NAME</span>\nexport APISERVER_NAME=apiserver.demo\necho <span class=\"hljs-string\">&quot;${MASTER_IP}    ${APISERVER_NAME}&quot;</span> &gt;&gt; /etc/hosts\n\n<span class=\"hljs-comment\"># 替换为 master 节点上 kubeadm token create 命令的输出</span>\nkubeadm join apiserver.demo:<span class=\"hljs-number\">6443</span> --token mpfjma<span class=\"hljs-number\">.4</span>vjjg8flqihor4vt     --discovery-token-ca-cert-<span class=\"hljs-built_in\">hash</span> sha256:6f7a8e40a810323672de5eee6f4d19aa2dbdb38411845a1bf5dd63485c43d303\n \n</code></pre><p>检查安装结果</p>\n<pre><code>kubectl get nodes -o wide\n</code></pre><h1>安装ingress controller</h1>\n<p>kubernetes支持多种Ingress Controllers (traefic / Kong / Istio / Nginx 等)，本文推荐使用 <a href=\"https://github.com/nginxinc/kubernetes-ingress\">https://github.com/nginxinc/kubernetes-ingress</a></p>\n<pre><code class=\"hljs language-powershell\">\n<span class=\"hljs-comment\"># 参考yaml/ingress.yaml的配置文件</span>\n\n<span class=\"hljs-comment\"># 只在master节点中执行</span>\nkubectl apply -f ....yaml\n</code></pre><h1>重启问题</h1>\n<p>整个集群所有的节点ip必须是固定的</p>\n<p>重启后会发现许多 Pod 不在 Running 状态，此时，请使用如下命令删除这些状态不正常的 Pod。通常，您的 Pod 如果是使用 Deployment、StatefulSet 等控制器创建的，kubernetes 将创建新的 Pod 作为替代，重新启动的 Pod 通常能够正常工作。</p>\n<pre><code>kubectl get pods --all-namespaces\n\nkubectl <span class=\"hljs-keyword\">delete</span> pod &lt;pod-name&gt; -n &lt;pod-namespece&gt;\n</code></pre><h1>按照kuboard按照但是报错没有docker</h1>\n<p>错了主要是按照脚本出错没有装上containered</p>\n<p>尝试是否是因为kubelet没有将环境设置为systemd</p>\n<pre><code class=\"hljs language-powershell\">vim /usr/lib/systemd/system/kubelet.service.d/<span class=\"hljs-number\">10</span>-kubeadm.conf\n<span class=\"hljs-comment\"># 在Environment后添加--cgroup-driver=systemd</span>\nsystemctl daemon-reload\nsystemctl restart kubelet\n</code></pre><p>容器运行时和 kubelet 都具有名字为 <a href=\"https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/\">&quot;cgroup driver&quot;</a> 的属性，该属性对于在 Linux 机器上管理 CGroups 而言非常重要。你需要确保容器运行时和 kubelet 所使用的是相同的 cgroup 驱动，否则 kubelet 进程会失败。</p>\n<br/>\n\n<h1>主要脚本</h1>\n<br/>\n\n<pre><code class=\"hljs language-powershell\"><span class=\"hljs-comment\">#!/bin/bash</span>\n<span class=\"hljs-comment\"># init_master.sh</span>\n<span class=\"hljs-comment\"># 只在 master 节点执行</span>\n\n<span class=\"hljs-comment\"># 脚本出错时终止执行</span>\n<span class=\"hljs-string\">set</span> <span class=\"hljs-string\">-e</span>\n\n<span class=\"hljs-string\">if</span> [ <span class=\"hljs-string\">$</span>{<span class=\"hljs-comment\">#POD_SUBNET} -eq 0 ] || [ ${#APISERVER_NAME} -eq 0 ]; then</span>\n  <span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">-e</span> <span class=\"hljs-string\">&quot;\\033[31;1m请确保您已经设置了环境变量 POD_SUBNET 和 APISERVER_NAME \\033[0m&quot;</span>\n  <span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">当前POD_SUBNET=$POD_SUBNET</span>\n  <span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">当前APISERVER_NAME=$APISERVER_NAME</span>\n  <span class=\"hljs-string\">exit</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-string\">fi</span>\n\n\n<span class=\"hljs-comment\"># 查看完整配置选项 https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1beta2</span>\n<span class=\"hljs-string\">rm</span> <span class=\"hljs-string\">-f</span> <span class=\"hljs-string\">./kubeadm-config.yaml</span>\n<span class=\"hljs-string\">cat</span> <span class=\"hljs-string\">&lt;&lt;EOF</span> <span class=\"hljs-string\">&gt;</span> <span class=\"hljs-string\">./kubeadm-config.yaml</span>\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">kubeadm.k8s.io/v1beta2</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterConfiguration</span>\n<span class=\"hljs-attr\">kubernetesVersion:</span> <span class=\"hljs-string\">v$</span>{<span class=\"hljs-number\">1</span>}\n<span class=\"hljs-attr\">imageRepository:</span> <span class=\"hljs-string\">registry.aliyuncs.com/k8sxio</span>\n<span class=\"hljs-attr\">controlPlaneEndpoint:</span> <span class=\"hljs-string\">&quot;${APISERVER_NAME}:6443&quot;</span>\n<span class=\"hljs-attr\">networking:</span>\n  <span class=\"hljs-attr\">serviceSubnet:</span> <span class=\"hljs-string\">&quot;10.96.0.0/16&quot;</span>\n  <span class=\"hljs-attr\">podSubnet:</span> <span class=\"hljs-string\">&quot;${POD_SUBNET}&quot;</span>\n  <span class=\"hljs-attr\">dnsDomain:</span> <span class=\"hljs-string\">&quot;cluster.local&quot;</span>\n<span class=\"hljs-attr\">dns:</span>\n  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">CoreDNS</span>\n  <span class=\"hljs-attr\">imageRepository:</span> <span class=\"hljs-string\">swr.cn-east-2.myhuaweicloud.com$</span>{<span class=\"hljs-number\">2</span>}\n  <span class=\"hljs-attr\">imageTag:</span> <span class=\"hljs-number\">1.8</span><span class=\"hljs-number\">.0</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">kubelet.config.k8s.io/v1beta1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">KubeletConfiguration</span>\n<span class=\"hljs-attr\">cgroupDriver:</span> <span class=\"hljs-string\">systemd</span>\n<span class=\"hljs-string\">EOF</span>\n\n<span class=\"hljs-comment\"># kubeadm init</span>\n<span class=\"hljs-comment\"># 根据您服务器网速的情况，您需要等候 3 - 10 分钟</span>\n<span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">&quot;&quot;</span>\n<span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">&quot;抓取镜像，请稍候...&quot;</span>\n<span class=\"hljs-string\">kubeadm</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-string\">images</span> <span class=\"hljs-string\">pull</span> <span class=\"hljs-string\">--config=kubeadm-config.yaml</span>\n<span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">&quot;&quot;</span>\n<span class=\"hljs-string\">echo</span> <span class=\"hljs-string\">&quot;初始化 Master 节点&quot;</span>\n<span class=\"hljs-string\">kubeadm</span> <span class=\"hljs-string\">init</span> <span class=\"hljs-string\">--config=kubeadm-config.yaml</span> <span class=\"hljs-string\">--upload-certs</span>\n\n<span class=\"hljs-comment\"># 配置 kubectl</span>\n<span class=\"hljs-string\">rm</span> <span class=\"hljs-string\">-rf</span> <span class=\"hljs-string\">/root/.kube/</span>\n<span class=\"hljs-string\">mkdir</span> <span class=\"hljs-string\">/root/.kube/</span>\n<span class=\"hljs-string\">cp</span> <span class=\"hljs-string\">-i</span> <span class=\"hljs-string\">/etc/kubernetes/admin.conf</span> <span class=\"hljs-string\">/root/.kube/config</span>\n \n</code></pre><br/>\n\n<pre><code class=\"hljs language-powershell\"><span class=\"hljs-comment\">#!/bin/bash</span>\n<span class=\"hljs-comment\"># kubelet_install.sh</span>\n<span class=\"hljs-comment\"># 在 master 节点和 worker 节点都要执行</span>\n\n<span class=\"hljs-comment\"># 安装 containerd</span>\n<span class=\"hljs-comment\"># 参考文档如下</span>\n<span class=\"hljs-comment\"># https://kubernetes.io/docs/setup/production-environment/container-runtimes/#containerd</span>\n\ncat &lt;&lt;EOF | sudo tee /etc/modules-load.d/containerd.conf\noverlay\nbr_netfilter\nEOF\n\nsudo modprobe overlay\nsudo modprobe br_netfilter\n\n<span class=\"hljs-comment\"># Setup required sysctl params, these persist across reboots.</span>\ncat &lt;&lt;EOF | sudo tee /etc/sysctl.d/<span class=\"hljs-number\">99</span>-kubernetes-cri.conf\nnet.bridge.bridge-nf-call-iptables  = <span class=\"hljs-number\">1</span>\nnet.ipv4.ip_forward                 = <span class=\"hljs-number\">1</span>\nnet.bridge.bridge-nf-call-ip6tables = <span class=\"hljs-number\">1</span>\nEOF\n\n<span class=\"hljs-comment\"># Apply sysctl params without reboot</span>\nsysctl --system\n\n<span class=\"hljs-comment\"># 卸载旧版本</span>\nyum remove -y containerd.io\n\n<span class=\"hljs-comment\"># 设置 yum repository</span>\nyum install -y yum-utils device-mapper-persistent-data lvm2\nyum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo\n\n<span class=\"hljs-comment\"># 安装 containerd</span>\nyum install -y containerd.io-<span class=\"hljs-number\">1.4</span><span class=\"hljs-number\">.3</span>\n\nmkdir -p /etc/containerd\ncontainerd config default &gt; /etc/containerd/config.toml\n\nsed -i <span class=\"hljs-string\">&quot;s#k8s.gcr.io#registry.aliyuncs.com/k8sxio#g&quot;</span>  /etc/containerd/config.toml\nsed -i <span class=\"hljs-string\">&#x27;/containerd.runtimes.runc.options/a\\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ SystemdCgroup = true&#x27;</span> /etc/containerd/config.toml\nsed -i <span class=\"hljs-string\">&quot;s#https://registry-1.docker.io#${REGISTRY_MIRROR}#g&quot;</span>  /etc/containerd/config.toml\n\n\nsystemctl daemon-reload\nsystemctl enable containerd\nsystemctl restart containerd\n\n\n<span class=\"hljs-comment\"># 安装 nfs-utils</span>\n<span class=\"hljs-comment\"># 必须先安装 nfs-utils 才能挂载 nfs 网络存储</span>\nyum install -y nfs-utils\nyum install -y wget\n\n<span class=\"hljs-comment\"># 关闭 防火墙</span>\nsystemctl stop firewalld\nsystemctl disable firewalld\n\n<span class=\"hljs-comment\"># 关闭 SeLinux</span>\nsetenforce <span class=\"hljs-number\">0</span>\nsed -i <span class=\"hljs-string\">&quot;s/SELINUX=enforcing/SELINUX=disabled/g&quot;</span> /etc/selinux/config\n\n<span class=\"hljs-comment\"># 关闭 swap</span>\nswapoff -a\nyes | cp /etc/fstab /etc/fstab_bak\ncat /etc/fstab_bak |grep -v swap &gt; /etc/fstab\n\n<span class=\"hljs-comment\"># 配置K8S的yum源</span>\ncat &lt;&lt;EOF &gt; /etc/yum.repos.d/kubernetes.repo\n[kubernetes]\nname=Kubernetes\nbaseurl=http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=<span class=\"hljs-number\">1</span>\ngpgcheck=<span class=\"hljs-number\">0</span>\nrepo_gpgcheck=<span class=\"hljs-number\">0</span>\ngpgkey=http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg\n       http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF\n\n<span class=\"hljs-comment\"># 卸载旧版本</span>\nyum remove -y kubelet kubeadm kubectl\n\n<span class=\"hljs-comment\"># 安装kubelet、kubeadm、kubectl</span>\n<span class=\"hljs-comment\"># 将 ${1} 替换为 kubernetes 版本号，例如 1.20.1</span>\nyum install -y kubelet-${<span class=\"hljs-number\">1</span>} kubeadm-${<span class=\"hljs-number\">1</span>} kubectl-${<span class=\"hljs-number\">1</span>}\n\ncrictl config runtime-endpoint /run/containerd/containerd.sock\n\n<span class=\"hljs-comment\"># 重启 docker，并启动 kubelet</span>\nsystemctl daemon-reload\nsystemctl enable kubelet &amp;&amp; systemctl start kubelet\n\ncontainerd --version\nkubelet --version\n \n</code></pre><pre><code class=\"hljs language-yaml\"><span class=\"hljs-comment\"># 如果打算用于生产环境，请参考 https://github.com/nginxinc/kubernetes-ingress/blob/v1.5.5/docs/installation.md 并根据您自己的情况做进一步定制</span>\n<span class=\"hljs-comment\"># ingress.yaml</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Namespace</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span> \n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">nginx-ingress</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">Secret</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">default-server-secret</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">nginx-ingress</span>\n<span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">Opaque</span>\n<span class=\"hljs-attr\">data:</span>\n  <span class=\"hljs-attr\">tls.crt:</span> <span class=\"hljs-string\">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN2akNDQWFZQ0NRREFPRjl0THNhWFhEQU5CZ2txaGtpRzl3MEJBUXNGQURBaE1SOHdIUVlEVlFRRERCWk8KUjBsT1dFbHVaM0psYzNORGIyNTBjbTlzYkdWeU1CNFhEVEU0TURreE1qRTRNRE16TlZvWERUSXpNRGt4TVRFNApNRE16TlZvd0lURWZNQjBHQTFVRUF3d1dUa2RKVGxoSmJtZHlaWE56UTI5dWRISnZiR3hsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUwvN2hIUEtFWGRMdjNyaUM3QlBrMTNpWkt5eTlyQ08KR2xZUXYyK2EzUDF0azIrS3YwVGF5aGRCbDRrcnNUcTZzZm8vWUk1Y2Vhbkw4WGM3U1pyQkVRYm9EN2REbWs1Qgo4eDZLS2xHWU5IWlg0Rm5UZ0VPaStlM2ptTFFxRlBSY1kzVnNPazFFeUZBL0JnWlJVbkNHZUtGeERSN0tQdGhyCmtqSXVuektURXUyaDU4Tlp0S21ScUJHdDEwcTNRYzhZT3ExM2FnbmovUWRjc0ZYYTJnMjB1K1lYZDdoZ3krZksKWk4vVUkxQUQ0YzZyM1lma1ZWUmVHd1lxQVp1WXN2V0RKbW1GNWRwdEMzN011cDBPRUxVTExSakZJOTZXNXIwSAo1TmdPc25NWFJNV1hYVlpiNWRxT3R0SmRtS3FhZ25TZ1JQQVpQN2MwQjFQU2FqYzZjNGZRVXpNQ0F3RUFBVEFOCkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWpLb2tRdGRPcEsrTzhibWVPc3lySmdJSXJycVFVY2ZOUitjb0hZVUoKdGhrYnhITFMzR3VBTWI5dm15VExPY2xxeC9aYzJPblEwMEJCLzlTb0swcitFZ1U2UlVrRWtWcitTTFA3NTdUWgozZWI4dmdPdEduMS9ienM3bzNBaS9kclkrcUI5Q2k1S3lPc3FHTG1US2xFaUtOYkcyR1ZyTWxjS0ZYQU80YTY3Cklnc1hzYktNbTQwV1U3cG9mcGltU1ZmaXFSdkV5YmN3N0NYODF6cFErUyt1eHRYK2VBZ3V0NHh3VlI5d2IyVXYKelhuZk9HbWhWNThDd1dIQnNKa0kxNXhaa2VUWXdSN0diaEFMSkZUUkk3dkhvQXprTWIzbjAxQjQyWjNrN3RXNQpJUDFmTlpIOFUvOWxiUHNoT21FRFZkdjF5ZytVRVJxbStGSis2R0oxeFJGcGZnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=</span>\n  <span class=\"hljs-attr\">tls.key:</span> <span class=\"hljs-string\">LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdi91RWM4b1JkMHUvZXVJTHNFK1RYZUprckxMMnNJNGFWaEMvYjVyYy9XMlRiNHEvClJOcktGMEdYaVN1eE9ycXgrajlnamx4NXFjdnhkenRKbXNFUkJ1Z1B0ME9hVGtIekhvb3FVWmcwZGxmZ1dkT0EKUTZMNTdlT1l0Q29VOUZ4amRXdzZUVVRJVUQ4R0JsRlNjSVo0b1hFTkhzbysyR3VTTWk2Zk1wTVM3YUhudzFtMApxWkdvRWEzWFNyZEJ6eGc2clhkcUNlUDlCMXl3VmRyYURiUzc1aGQzdUdETDU4cGszOVFqVUFQaHpxdmRoK1JWClZGNGJCaW9CbTVpeTlZTW1hWVhsMm0wTGZzeTZuUTRRdFFzdEdNVWozcGJtdlFmazJBNnljeGRFeFpkZFZsdmwKMm82MjBsMllxcHFDZEtCRThCay90elFIVTlKcU56cHpoOUJUTXdJREFRQUJBb0lCQVFDZklHbXowOHhRVmorNwpLZnZJUXQwQ0YzR2MxNld6eDhVNml4MHg4Mm15d1kxUUNlL3BzWE9LZlRxT1h1SENyUlp5TnUvZ2IvUUQ4bUFOCmxOMjRZTWl0TWRJODg5TEZoTkp3QU5OODJDeTczckM5bzVvUDlkazAvYzRIbjAzSkVYNzZ5QjgzQm9rR1FvYksKMjhMNk0rdHUzUmFqNjd6Vmc2d2szaEhrU0pXSzBwV1YrSjdrUkRWYmhDYUZhNk5nMUZNRWxhTlozVDhhUUtyQgpDUDNDeEFTdjYxWTk5TEI4KzNXWVFIK3NYaTVGM01pYVNBZ1BkQUk3WEh1dXFET1lvMU5PL0JoSGt1aVg2QnRtCnorNTZud2pZMy8yUytSRmNBc3JMTnIwMDJZZi9oY0IraVlDNzVWYmcydVd6WTY3TWdOTGQ5VW9RU3BDRkYrVm4KM0cyUnhybnhBb0dCQU40U3M0ZVlPU2huMVpQQjdhTUZsY0k2RHR2S2ErTGZTTXFyY2pOZjJlSEpZNnhubmxKdgpGenpGL2RiVWVTbWxSekR0WkdlcXZXaHFISy9iTjIyeWJhOU1WMDlRQ0JFTk5jNmtWajJTVHpUWkJVbEx4QzYrCk93Z0wyZHhKendWelU0VC84ajdHalRUN05BZVpFS2FvRHFyRG5BYWkyaW5oZU1JVWZHRXFGKzJyQW9HQkFOMVAKK0tZL0lsS3RWRzRKSklQNzBjUis3RmpyeXJpY05iWCtQVzUvOXFHaWxnY2grZ3l4b25BWlBpd2NpeDN3QVpGdwpaZC96ZFB2aTBkWEppc1BSZjRMazg5b2pCUmpiRmRmc2l5UmJYbyt3TFU4NUhRU2NGMnN5aUFPaTVBRHdVU0FkCm45YWFweUNweEFkREtERHdObit3ZFhtaTZ0OHRpSFRkK3RoVDhkaVpBb0dCQUt6Wis1bG9OOTBtYlF4VVh5YUwKMjFSUm9tMGJjcndsTmVCaWNFSmlzaEhYa2xpSVVxZ3hSZklNM2hhUVRUcklKZENFaHFsV01aV0xPb2I2NTNyZgo3aFlMSXM1ZUtka3o0aFRVdnpldm9TMHVXcm9CV2xOVHlGanIrSWhKZnZUc0hpOGdsU3FkbXgySkJhZUFVWUNXCndNdlQ4NmNLclNyNkQrZG8wS05FZzFsL0FvR0FlMkFVdHVFbFNqLzBmRzgrV3hHc1RFV1JqclRNUzRSUjhRWXQKeXdjdFA4aDZxTGxKUTRCWGxQU05rMXZLTmtOUkxIb2pZT2pCQTViYjhibXNVU1BlV09NNENoaFJ4QnlHbmR2eAphYkJDRkFwY0IvbEg4d1R0alVZYlN5T294ZGt5OEp0ek90ajJhS0FiZHd6NlArWDZDODhjZmxYVFo5MWpYL3RMCjF3TmRKS2tDZ1lCbyt0UzB5TzJ2SWFmK2UwSkN5TGhzVDQ5cTN3Zis2QWVqWGx2WDJ1VnRYejN5QTZnbXo5aCsKcDNlK2JMRUxwb3B0WFhNdUFRR0xhUkcrYlNNcjR5dERYbE5ZSndUeThXczNKY3dlSTdqZVp2b0ZpbmNvVlVIMwphdmxoTUVCRGYxSjltSDB5cDBwWUNaS2ROdHNvZEZtQktzVEtQMjJhTmtsVVhCS3gyZzR6cFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ConfigMap</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">v1</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-config</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">nginx-ingress</span>\n<span class=\"hljs-attr\">data:</span>\n  <span class=\"hljs-attr\">server-names-hash-bucket-size:</span> <span class=\"hljs-string\">&quot;1024&quot;</span>\n\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1beta1</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span>\n<span class=\"hljs-attr\">rules:</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">services</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">endpoints</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">secrets</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">configmaps</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">pods</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;&quot;</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">events</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">create</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">patch</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">extensions</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">&quot;extensions&quot;</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">ingresses/status</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">update</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">apiGroups:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">k8s.nginx.org</span>\n  <span class=\"hljs-attr\">resources:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">virtualservers</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">virtualserverroutes</span>\n  <span class=\"hljs-attr\">verbs:</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">list</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">watch</span>\n  <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">get</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRoleBinding</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io/v1beta1</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span>\n<span class=\"hljs-attr\">subjects:</span>\n<span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ServiceAccount</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">nginx-ingress</span>\n<span class=\"hljs-attr\">roleRef:</span>\n  <span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">ClusterRole</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span>\n  <span class=\"hljs-attr\">apiGroup:</span> <span class=\"hljs-string\">rbac.authorization.k8s.io</span>\n\n<span class=\"hljs-meta\">---</span>\n<span class=\"hljs-attr\">apiVersion:</span> <span class=\"hljs-string\">apps/v1</span>\n<span class=\"hljs-attr\">kind:</span> <span class=\"hljs-string\">DaemonSet</span>\n<span class=\"hljs-attr\">metadata:</span>\n  <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span>\n  <span class=\"hljs-attr\">namespace:</span> <span class=\"hljs-string\">nginx-ingress</span>\n  <span class=\"hljs-attr\">annotations:</span>\n    <span class=\"hljs-attr\">prometheus.io/scrape:</span> <span class=\"hljs-string\">&quot;true&quot;</span>\n    <span class=\"hljs-attr\">prometheus.io/port:</span> <span class=\"hljs-string\">&quot;9113&quot;</span>\n<span class=\"hljs-attr\">spec:</span>\n  <span class=\"hljs-attr\">selector:</span>\n    <span class=\"hljs-attr\">matchLabels:</span>\n      <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx-ingress</span>\n  <span class=\"hljs-attr\">template:</span>\n    <span class=\"hljs-attr\">metadata:</span>\n      <span class=\"hljs-attr\">labels:</span>\n        <span class=\"hljs-attr\">app:</span> <span class=\"hljs-string\">nginx-ingress</span>\n    <span class=\"hljs-attr\">spec:</span>\n      <span class=\"hljs-attr\">serviceAccountName:</span> <span class=\"hljs-string\">nginx-ingress</span>\n      <span class=\"hljs-attr\">containers:</span>\n      <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">image:</span> <span class=\"hljs-string\">nginx/nginx-ingress:1.5.5</span>\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">nginx-ingress</span>\n        <span class=\"hljs-attr\">ports:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">http</span>\n          <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">80</span>\n          <span class=\"hljs-attr\">hostPort:</span> <span class=\"hljs-number\">80</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">https</span>\n          <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">443</span>\n          <span class=\"hljs-attr\">hostPort:</span> <span class=\"hljs-number\">443</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">prometheus</span>\n          <span class=\"hljs-attr\">containerPort:</span> <span class=\"hljs-number\">9113</span>\n        <span class=\"hljs-attr\">env:</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAMESPACE</span>\n          <span class=\"hljs-attr\">valueFrom:</span>\n            <span class=\"hljs-attr\">fieldRef:</span>\n              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.namespace</span>\n        <span class=\"hljs-bullet\">-</span> <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">POD_NAME</span>\n          <span class=\"hljs-attr\">valueFrom:</span>\n            <span class=\"hljs-attr\">fieldRef:</span>\n              <span class=\"hljs-attr\">fieldPath:</span> <span class=\"hljs-string\">metadata.name</span>\n        <span class=\"hljs-attr\">args:</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">-nginx-configmaps=$(POD_NAMESPACE)/nginx-config</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">-default-server-tls-secret=$(POD_NAMESPACE)/default-server-secret</span>\n         <span class=\"hljs-comment\">#- -v=3 # Enables extensive logging. Useful for troubleshooting.</span>\n         <span class=\"hljs-comment\">#- -report-ingress-status</span>\n         <span class=\"hljs-comment\">#- -external-service=nginx-ingress</span>\n         <span class=\"hljs-comment\">#- -enable-leader-election</span>\n          <span class=\"hljs-bullet\">-</span> <span class=\"hljs-string\">-enable-prometheus-metrics</span>\n         <span class=\"hljs-comment\">#- -enable-custom-resources</span>\n \n</code></pre>","frontMatter":{"readingTime":{"text":"13 min read","minutes":12.845,"time":770700,"words":2569},"slug":"一次k8s环境搭建记录","fileName":"一次k8s环境搭建记录.md","title":"数据变更记录工具","date":"2022-03-15T00:00:00.000Z","tags":["实践","云原生"],"draft":false,"summary":"kubernetes环境搭建记录"}},"prev":{"title":"数据变更记录工具","date":"2022-01-15T00:00:00.000Z","tags":["中间件"],"draft":false,"summary":"接到个工作，需要为应用提供通用的数据变更日志功能","slug":"数据变更记录工具"},"next":{"title":"如何使用nginx实现灰度部署","date":"2022-03-31T00:00:00.000Z","tags":["实践","云原生"],"draft":false,"summary":"灰度部署","slug":"如何使用nginx实现灰度部署"}},"__N_SSG":true}